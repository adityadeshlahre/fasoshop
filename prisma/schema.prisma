// schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

// Define the database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Use your PostgreSQL connection URL
}

// Define your data models

model Admin {
  id        Int        @id @default(autoincrement())
  username  String
  email     String     @unique
  password  String // In practice, you should hash the password
  // Add more admin fields as needed
  token     String?
  products  Product[]
  cartItems CartItem[]
}

model User {
  id       Int     @id @default(autoincrement())
  username String
  email    String  @unique
  password String
  token    String?
  // Add more user fields here (e.g., name, profile picture, etc.)

  // Define the relationship with products
  // products Product[]
  cartItems CartItem[]
}

model Product {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  // Add more product fields here (e.g., category, brand, etc.)

  // Define the relationship with users
  // userId      Int
  // user        User    @relation(fields: [userId], references: [id])
  // Add a relation to Admin
  adminId   Int
  admin     Admin      @relation(fields: [adminId], references: [id], onDelete: Cascade)
  cartItems CartItem[]
}

model CartItem {
  id        Int     @id @default(autoincrement())
  quantity  Int
  productId Int
  product   Product @relation(fields: [productId], references: [id],onDelete: Cascade)
  adminId   Int?
  admin     Admin?  @relation(fields: [adminId], references: [id])
  userId    Int?
  user      User?   @relation(fields: [userId], references: [id])
}
